version: 2
jobs:
  build:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: sudo npm install -global sfdx-cli
      - run:
          name: SFDX version
          command: |
              sfdx --version
              sfdx plugins --core
      - run:
          name: Create Scratch Org and Connexion Web
          command: |
            mkdir keys
            echo "Generate Key"
            openssl enc -nosalt -aes-256-cbc -in config/server.key -out server.key.enc -base64 -K $SFDC_SERVER_KEY -iv $SFDC_SERVER_IV
            echo "Authenticating..."
            sfdx force:auth:jwt:grant --clientid $SFDC_CONSUMER_KEY \
                                      --jwtkeyfile config/server.key \
                                      --username $SFDC_USER \
                                      --setdefaultdevhubusername -a DevHubTiime \
                                      --instanceurl https://login.salesforce.com
            echo "Creating the Scratch Org..."
            sfdx force:org:create -s -f config/project-scratch-def.json \
                                  --targetdevhubusername DevHubTiime \
                                  --setalias circle_build_$CIRCLE_BUILD_NUM \
                                  --wait $DEPLOY_TIMEOUT
            sfdx force:org:open --targetusername circle_build_$CIRCLE_BUILD_NUM \
                                --urlonly
      - run:
            name: Deploy to salesforce
            command: |
              sfdx force:source:push --targetusername circle_build_$CIRCLE_BUILD_NUM
      - run:
            name: Run Apex Tests
            command: |
              sfdx force:apex:test:run --testlevel RunLocalTests \
                                      --resultformat junit \
                                      --outputdir /tmp/test-results \
                                      --targetusername circle_build_$CIRCLE_BUILD_NUM \
                                      --wait $DEPLOY_TIMEOUT \
                                      --codecoverage
              sfdx force:data:soql:query --usetoolingapi \
                                        --query "SELECT PercentCovered FROM ApexOrgWideCoverage" \
                                        --targetusername circle_build_$CIRCLE_BUILD_NUM \
                                        --json > /tmp/test-results/orgCoverage.json
              sfdx force:data:soql:query --usetoolingapi \
                                        --query "SELECT ApexClassorTrigger.Name, NumLinesCovered,NumLinesUncovered \
                                                    FROM ApexCodeCoverageAggregate \
                                                  WHERE NOT(ApexClassorTrigger.Name LIKE '%Test') \
                                                ORDER BY ApexClassorTrigger.Name" \
                                        --targetusername circle_build_$CIRCLE_BUILD_NUM \
                                        --json > /tmp/test-results/classCoverage.json
              ORG_COVERAGE=$(jq .result.records[0].PercentCovered /tmp/test-results/orgCoverage.json)
              printf "%s%% code coverage" "$ORG_COVERAGE"
              if [[ $ORG_COVERAGE -lt 80 ]]; then false; fi
      - run:
            name: Delete Scratch
            command: |
              sfdx force:org:delete -u circle_build_$CIRCLE_BUILD_NUM -p